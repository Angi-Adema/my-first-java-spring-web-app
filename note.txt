# Getting Started

## HTML

<html>
	
	<head>
		<title> My first HTML Page </title>
	</head>
	
	<body>
		My first html page with body
	</body>
	
</html>

## JSP

## In order to utilize JSP, you have to create a specific folder defined by Spring Boot for all the JSP. We have part of the structure already created here in this text file for the JSP file.
/src/main/resources/META-INF/resources/WEB-INF/jsp/sayHello.jsp
sayHello.jsp  -  Where the HTML code is stored.  Much easier to make changes in a jsp file rather than in the Java code.

## What we are doing? We are sending a request to /say-hello-jsp which is being handled by the SayHelloController and inside this controller the sayHelloJsp method is handling this request
returning back the name of the jsp or "sayHello". What is the MVC doing? It is making use of view resolver. The view resolver is configured in the application.properties file where we define
the prefix and the suffix. The request is created and redirected to the specific jsp. /WEB-INF/jsp/sayHello.jsp

## Create a Login JSP

/login => com.in28minutes.springboot.myfirstwebapp.login.LoginController => login.jsp

## HTTP request comes in and is handled by the Front Controller to be sent to the correct controller which identifies the view by name then is returned to the Front Controller and response 
is then returned. Lets say we go into the browser and type in the URL: localhost:8080/login.

B1: Identifies correct Controller method
- Dispatcher server first needs to identify the right controller method. It see the URL with /login.
- Passes this request to the login controller. /login => LoginController.loginPage

B2: Executes Controller method
- Executes .loginPage. Whatever data is needed it puts it into the model and returns the view name of login.

B3: Identifies correct View
- Dispatcher now has login but it doesn't know where the login view is. Makes use of the View Resolver.
- Login will be mapped to: /WEB-INF/jsp/login.jsp

B4: Executes View
- Now the dispatcher servlet has the right view name, executes the view, the view will be whatever is in the mapped JSP file and sent back as a response to the browser.
